<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.myproject.model.mapper.MemberMapper">
	<sql id="selectMember">
		select member_id,email,name,nickname,address,phonenum,password,birth,enable
		from g_member
	</sql>
	<!-- <select id="login" resultType="MemberDTO" parameterType="MemberDTO"> 
		<include refid="selectMember"></include> where id=#{id} and password=#{password} 
		</select> -->
	<select id="getMemberCount" resultType="int">
		select count(*) from g_member
	</select>
	
	<insert id="registerMember" parameterType="MemberDTO">
		insert into 
		g_member(member_id,email,name,nickname,address,phonenum,password,birth)
		values(member_seq.nextval,#{email},#{name},#{nickname},#{address},#{phonenum},#{password},
		to_date(#{birth},'YYYY-MM-DD'))
		<selectKey keyProperty="memberId" resultType="int"
			order="AFTER">
			select member_seq.currval from dual
		</selectKey>
	</insert>

	<select id="idcheck" resultType="int">
		select count(*) from g_member
		where email=#{value}
	</select>
	
	<select id="nickcheck" resultType="int">
		select count(*) from g_member
		where nickname=#{value}
	</select>
	<!-- -->
	<insert id="registerRole" parameterType="authorityDTO">
		insert into 
		authorities(user_id,authority) values(#{user_id},#{authority})
	</insert>
	<!-- Spring Security에서 로그인 인증시 사용 : 사용가능한(enabled 1) 계정일 경우만 조회. -->
	<select id="findMemberById" resultType="MemberDTO">
		SELECT member_id,email,password,address,nickname,enable,name,phonenum,birth
		FROM g_member
		WHERE email=#{value}
		AND enable=1
	</select>
	<!-- Spring Security에서 권한 체크를 위해 사용 -->
	<select id="findAuthorityByUsername" resultType="authorityDTO">
	SELECT g.member_id,a.user_id,a.authority
	FROM g_member g, authorities a
	WHERE g.email=#{value}

	</select>
	
	<select id="findEmailByName" resultType="MemberDTO">
		SELECT email
		FROM g_member
		WHERE name=#{value}
		AND enable=1
	</select>
</mapper>










